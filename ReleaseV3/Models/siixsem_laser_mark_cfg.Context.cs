//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReleaseMonitorV4.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class siixsem_laser_mark_cfgEntities : DbContext
    {
        public siixsem_laser_mark_cfgEntities()
            : base("name=siixsem_laser_mark_cfgEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<getLMParameters_Result> getLMParameters(string lm)
        {
            var lmParameter = lm != null ?
                new ObjectParameter("lm", lm) :
                new ObjectParameter("lm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLMParameters_Result>("getLMParameters", lmParameter);
        }
    
        public virtual ObjectResult<getReleasePath_Result> getReleasePath()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getReleasePath_Result>("getReleasePath");
        }
    
        public virtual ObjectResult<getStatus_Result> getStatus(Nullable<int> idLM)
        {
            var idLMParameter = idLM.HasValue ?
                new ObjectParameter("idLM", idLM) :
                new ObjectParameter("idLM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStatus_Result>("getStatus", idLMParameter);
        }
    
        public virtual int setTaskToLM(Nullable<int> idlm, string task, string status)
        {
            var idlmParameter = idlm.HasValue ?
                new ObjectParameter("idlm", idlm) :
                new ObjectParameter("idlm", typeof(int));
    
            var taskParameter = task != null ?
                new ObjectParameter("task", task) :
                new ObjectParameter("task", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("setTaskToLM", idlmParameter, taskParameter, statusParameter);
        }
    
        public virtual ObjectResult<getLaserMark_Result> getLaserMark(Nullable<int> idLS)
        {
            var idLSParameter = idLS.HasValue ?
                new ObjectParameter("idLS", idLS) :
                new ObjectParameter("idLS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLaserMark_Result>("getLaserMark", idLSParameter);
        }
    
        public virtual ObjectResult<getLaserMarkByDesc_Result> getLaserMarkByDesc(string dESCR)
        {
            var dESCRParameter = dESCR != null ?
                new ObjectParameter("DESCR", dESCR) :
                new ObjectParameter("DESCR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLaserMarkByDesc_Result>("getLaserMarkByDesc", dESCRParameter);
        }
    }
}
